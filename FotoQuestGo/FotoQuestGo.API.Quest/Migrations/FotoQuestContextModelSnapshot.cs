// <auto-generated />
using System;
using FotoQuestGo.API.Quest.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FotoQuestGo.API.Quest.Migrations
{
    [DbContext(typeof(FotoQuestContext))]
    partial class FotoQuestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Answer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("QuestID");

                    b.Property<int>("QuestionID");

                    b.Property<string>("Text");

                    b.HasKey("ID");

                    b.HasIndex("QuestID");

                    b.HasIndex("QuestionID");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Foto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Direction");

                    b.Property<string>("Path");

                    b.Property<int>("QuestID");

                    b.HasKey("ID");

                    b.HasIndex("QuestID");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Quest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Latitude");

                    b.Property<string>("Longitude");

                    b.Property<DateTime>("SubmissionTime");

                    b.HasKey("ID");

                    b.ToTable("Quests");
                });

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Question", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Text");

                    b.HasKey("ID");

                    b.ToTable("Questions");

                    b.HasData(
                        new { ID = 1, Text = "Question 1" },
                        new { ID = 2, Text = "Question 2" },
                        new { ID = 3, Text = "Question 3" }
                    );
                });

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Answer", b =>
                {
                    b.HasOne("FotoQuestGo.API.Quest.Models.Quest", "Quest")
                        .WithMany("Answers")
                        .HasForeignKey("QuestID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FotoQuestGo.API.Quest.Models.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FotoQuestGo.API.Quest.Models.Foto", b =>
                {
                    b.HasOne("FotoQuestGo.API.Quest.Models.Quest", "Quest")
                        .WithMany("Fotos")
                        .HasForeignKey("QuestID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
